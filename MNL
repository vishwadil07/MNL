rm(list = ls())

#full <- read.csv("eBay_Completes_US data_E.csv")

#data <- full[c("SN","respid" ,"a1_1", "a4_a19_1",  
               "a4_a19_2",  "a4_a19_3",  "a4_a19_4",  "a4_a19_5",
               "a4_a19_6")]

########## Libraries to be loaded ##############

library(nnet)
library(scales)

########## Functions to be used ################

rename <- function(df1,u1,v1){
  oldnames=u1
  newnames=v1
  for(i in 1:length(u1))names(df1)[names(df1)==oldnames[i]]=newnames[i]
  return(df1)
}

Count <- function(x,y,z) {
  count = 0
  for(i in 1:length(x))
  {
    if(x[i] == y | x[i] == z)
    {
      count = count + 1
    }
  }
  return(count)
}

data <- read.csv("USeBay.csv")

############## Applying MNL for initial data ##################

data$y.obs <- as.factor(ifelse(data$a1_1 <= 6,-1,ifelse((data$a1_1 == 7 | data$a1_1 == 8),0,
                                              ifelse(data$a1_1 > 8,1,NA))))

# data$y.obs.fact <- as.factor(ifelse(data$y.obs == 1,"Promoter",ifelse(data$y.obs == 0,"Passive",
#                                                                       ifelse(data$y.obs == -1,"Detractor",NA))))

# attach(data)
# detach(data)

data$y.obs.rl <- relevel(data$y.obs, ref = "0")
init.mnl <- multinom(y.obs.rl ~ a4_a19_1 + a4_a19_2 + a4_a19_3 + a4_a19_4 + a4_a19_5
                     + a4_a19_6, data)
init.data <- data
init.data$y.pred <- predict(init.mnl)
summary(init.mnl)

z <- summary(init.mnl)$coefficients/summary(init.mnl)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2

p

write.csv(init.data$y.obs,"y.obs.csv",row.names = F)
write.csv(init.data$y.pred,"y.pred.csv",row.names = F)

class(init.data$y.obs)


x <- as.integer(init.data$y.obs)
class(x)
class(init.data$a4_a19_1)

a <- mean(as.integer(init.data$y.obs))
b <- mean(as.integer(init.data$y.pred))

init.a4_a19_1 <- round((Count(init.data$a4_a19_1,9,10)/dim(init.data)[1]),2)
init.a4_a19_2 <- round((Count(init.data$a4_a19_2,9,10)/dim(init.data)[1]),2)
init.a4_a19_3 <- round((Count(init.data$a4_a19_3,9,10)/dim(init.data)[1]),2)
init.a4_a19_4 <- round((Count(init.data$a4_a19_4,9,10)/dim(init.data)[1]),2)
init.a4_a19_5 <- round((Count(init.data$a4_a19_5,9,10)/dim(init.data)[1]),2)
init.a4_a19_6 <- round((Count(init.data$a4_a19_6,9,10)/dim(init.data)[1]),2)

cutoff.a4_a19_1 <- round((init.a4_a19_1 +  (init.a4_a19_1/10)),2)
cutoff.a4_a19_2 <- round((init.a4_a19_2 +  (init.a4_a19_2/10)),2)
cutoff.a4_a19_3 <- round((init.a4_a19_3 +  (init.a4_a19_3/10)),2)
cutoff.a4_a19_4 <- round((init.a4_a19_4 +  (init.a4_a19_4/10)),2)
cutoff.a4_a19_5 <- round((init.a4_a19_5 +  (init.a4_a19_5/10)),2)
cutoff.a4_a19_6 <- round((init.a4_a19_6 +  (init.a4_a19_6/10)),2)

init.nps.per <- percent(mean(init.data$y.pred))

a4_a19_1 <- data$a4_a19_1
a4_a19_1.n <- a4_a19_1
new.a4_a19_1 <- init.a4_a19_1

i <- 1
while(new.a4_a19_1 != cutoff.a4_a19_1){
  random <- sample(1:500,1)
  a <- ifelse(data$SN %in% random,data$SN,0)
  a4_a19_1.n <- ifelse((a == 0 | a4_a19_1.n == 10),
                       a4_a19_1.n,a4_a19_1.n + 1)
  new.a4_a19_1 <- format(round((Count(a4_a19_1.n,9,10)/dim(data)[1]),2),nsmall = 2)
  i <-  i + 1
}

